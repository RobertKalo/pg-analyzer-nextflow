
///////////////////////////////
//  Pipeline params
params {
	
	//// Metadata
  pipeline_name = "pg-analyzer"
  version = "0.0.1"
  nextflow_required_version = '22.10.3'           													// Nextflow version under which this pipeline was developed and tested

  //// Working constants
  timestamp = new Date().format("yyyy-MM-dd_HH-mm-ssz")
  tracedir = "pipeline_info"

  //// Tool params

	// ld="0.85" /* value to remove sites with r2 bigger than it within a window */
	// window="2000" /* the window size in bp for ld prunning */
	n_sites="1" /* sites to keep at most in the window, removing sites with small AF first */
	// plink2="plink2" /* path to plink2 executable */
	// threads_plink="4" /* threads for plink */
	maf="0.05" /* plink2 filters out all variants with allele frequency below this threshold */
	pca_number="20" /* number of pcas to ask to smartpca */
	admixture_seed_value="43" /* defined seed for admixture */
	admixture_threads="16" /* threads for admixture */
	// fam_id="NAT_AMR" /* plink id for fam file */
}

///////////////////////////////
//  Manifest
manifest {
		author = "robert.kalo@gmail.com"
    description = "Population Genetics Analyzer pipeline"
    mainScript = "${params.pipeline_name}.nf"
    nextflowVersion = ">=${params.nextflow_required_version}"
    version = "${params.version}"
}

///////////////////////////////
//  Profiles
profiles {
		local { includeConfig 'conf/local.config' }
    debug { includeConfig 'conf/debug.config' }
}

///////////////////////////////
//  Container
podman {
    enabled = true
    runOptions = '-u $(id -u):$(id -g)'
}

///////////////////////////////
//  Conda
conda { 																																		// conda is enabled only when Wave scope is not defined and vice versa,
		enabled = true																													// because Wave strategy contains conda
}

///////////////////////////////
//  Reports
timeline {
    enabled = true
    file = "${params.tracedir}/${params.timestamp}/timeline.html"
}
report {
    enabled = true
    file = "${params.tracedir}/${params.timestamp}/report.html"
}
trace {
    enabled = true
    file = "${params.tracedir}/${params.timestamp}/trace.txt"
}
dag {
    enabled = true
    file = "${params.tracedir}/${params.timestamp}/dag.svg"         				// run 'sudo apt-get install graphviz' in case of warning
}









/* UNUSED >>>>

// Wave operates with a pull and push rate limit, so we should avoid frequent usage of Wave pull.
// See "Availability" section at https://www.nextflow.io/blog/2022/rethinking-containers-for-cloud-native-pipelines.html
// TODO Learn and implement caching images for Wave 
wave {
  enabled = true
  strategy = 'container,conda'
  build.conda.commands = [
    'USER root',
    'RUN apt-get update -y && apt-get install -y procps'
  ]
  // build.cacheRepository = 'localhost:5000'													// push the Wave images to the local repository, instead of the default AWS repository
	// build.repository = 'localhost:5000'
}

<<<< UNUSED */
